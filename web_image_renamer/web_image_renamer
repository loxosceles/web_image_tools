#!/usr/bin/env python

from os import rename, path, walk
import sys

root_dir = './' # default
ext = ['JPG', 'jpg', 'png', 'PNG', 'TIFF', 'tiff']

def rename_files(directory=root_dir):
    """
    Walk through a directory and renames every file prepending 
    folder hierarchy.
    """
    for root, dirs, files in walk(directory, topdown='true'):
        files = filter_ext(ext, files, root)

        if not root.endswith('/'):
            root = root + '/'
        if not root.startswith('./'):
            root = './' + root

        for file in files:
            pd_name = transform_path(root)
            new_name = root +\
                pd_name + '-'

            if not file.startswith(new_name):
                rename(file, new_name +\
                    path.split(file)[1])

def transform_path(p):   
    """ 
    Take a path and transform it into a form suitable 
    for a file name.
    """
    if not p.startswith('./'):
        p = '/' + p
    print(p)
    p = p.strip('/').lstrip('.').replace(' ', '_')
    print(p)
    cf = path.abspath('./').replace(' ', '_').split('/')[-1]
    print(cf)
    print(cf + p.replace('/', '__'))
    return cf + p.replace('/', '__').replace('\\', '')


def filter_ext(ext_list, file_list, parentdir):
    """ 
    Add relative path to files and filter for allwed 
    extentions.
    """
    for filename in file_list:
        filename = path.join(parentdir, filename) 
        if filename.endswith(tuple(ext_list)):
            yield filename

if __name__ == "__main__":

    if len(sys.argv) > 2:
        print("Taking at most one argument")
        sys.exit(1)
    elif len(sys.argv) == 2:
        rename_files(sys.argv[1])
    else:
        rename_files()

